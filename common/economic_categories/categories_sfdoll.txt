



buffer = {
	hidden = yes
	use_for_ai_budget = yes
}

country = {
	hidden = yes
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

# Base income of country
country_base = {
	parent = country
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

trade = {
	use_for_ai_budget = yes
}

trade_routes = {
	#太虚
	parent = trade
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

resolutions = {
	parent = country
	use_for_ai_budget = yes
}

edicts = {
	use_for_ai_budget = yes
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
}

rare_edicts = {
	use_for_ai_budget = yes
	parent = edicts
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
}

ship_edicts = {
	parent = rare_edicts
	use_for_ai_budget = yes
}

campaigns = {
	use_for_ai_budget = yes
	parent = edicts
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
}

decisions = {
	use_for_ai_budget = yes
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
}

# Country wide modifier collection
country_container = {
	hidden = yes
	parent = country
}

country_monuments = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_ambition = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_federation_perks = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_civics = {
	parent = country_container
	generate_add_modifiers = {
		upkeep
		produces
	}
}

country_ai_uprising = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_covenant = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_dessanu = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_extended_payout = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_shoulders = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_galactic_standard = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_concessions = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_first_contact = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_custodian = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_tech = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_traditions = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_ruler = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_ethic = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
}

country_power_projection = {
	parent = country_container
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}



megastructures = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		consumer_goods
	}
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
}

colonies = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	triggered_cost_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_colonizer
		}
	}
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
	parent = country
}

ships = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
	ai_use_parent_for_resources_upkeep = {
		energy
		rlc_machine_part
		rlc_electronic_component
		rlc_fuel
	}
	parent = country
	#太虚
	triggered_cost_modifier = {
		key = ship_research_station
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = research_station
		}
	}
	triggered_cost_modifier = {
		key = ship_ev_mining_station
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = ev_mining_station
		}
	}
	triggered_produces_modifier = {
		key = ship_mining_station
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = mining_station
		}
	}
	triggered_cost_modifier = {
		key = ship_megastructures_homeless_ev
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			OR = {
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	triggered_cost_modifier = {
		key = ship_homeless_ev
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			OR = {
				is_ship_size = homeless_ship
				is_ship_size = homeless_ship_starbase
				is_ship_size = mini_homeless_ship
			}
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_mothership
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = mothership
		}
	}
	triggered_cost_modifier = {
		key = ship_fathership
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = fathership
		}
	}
	triggered_cost_modifier = {
		key = ship_escort_ev
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = escort_ship
		}
	}
	triggered_produces_modifier = {
		key = ship_transport
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = transport
		}
	}
	#---太虚结束---#
	triggered_cost_modifier = {
		key = starbase_shipyard_build
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
	}
	#gdf
	triggered_cost_modifier = {
		key = gdf_ship
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			has_ship_owner_type = galactic_community
		}
	}
	triggered_upkeep_modifier = {
		key = gdf_ship
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			has_ship_owner_type = galactic_community
		}
	}
	#juggernaut
	triggered_cost_modifier = {
		key = ship_juggernaut
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = juggernaut
		}
	}
	triggered_upkeep_modifier = {
		key = ship_juggernaut
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = juggernaut
		}
	}
	#colossus
	triggered_cost_modifier = {
		key = ship_colossus
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = colossus
		}
	}
	triggered_upkeep_modifier = {
		key = ship_colossus
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_size = colossus
		}
	}
	#colonizer
	triggered_cost_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_colonizer
		}
	}
	triggered_upkeep_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_colonizer
		}
	}
	#corvette
	triggered_cost_modifier = {
		key = ship_corvette
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = corvette
		}
	}
	triggered_upkeep_modifier = {
		key = ship_corvette
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = corvette
		}
	}
	#destroyer
	triggered_cost_modifier = {
		key = ship_destroyer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = destroyer
		}
	}
	triggered_upkeep_modifier = {
		key = ship_destroyer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = destroyer
		}
	}
	#cruser
	triggered_cost_modifier = {
		key = ship_cruiser
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = cruiser
		}
	}
	triggered_upkeep_modifier = {
		key = ship_cruiser
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = cruiser
		}
	}
	#battleship
	triggered_cost_modifier = {
		key = ship_battleship
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = battleship
		}
	}
	triggered_upkeep_modifier = {
		key = ship_battleship
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = battleship
		}
	}
	#titan
	triggered_cost_modifier = {
		key = ship_titan
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = titan
		}
	}
	triggered_upkeep_modifier = {
		key = ship_titan
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = titan
		}
	}
	#ship_fallen_throne
	triggered_cost_modifier = {
		key = ships_ship_fallen_throne
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = ship_fallen_throne
		}
	}
	triggered_upkeep_modifier = {
		key = ships_ship_fallen_throne
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = ship_fallen_throne
		}
	}
	#str_emperor_dragon
	triggered_cost_modifier = {
		key = ship_str_emperor_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_emperor_dragon
		}
	}
	triggered_upkeep_modifier = {
		key = ship_str_emperor_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_emperor_dragon
		}
	}
	#str_lightning_dragon
	triggered_cost_modifier = {
		key = ship_str_lightning_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_lightning_dragon
		}
	}
	triggered_upkeep_modifier = {
		key = ship_str_lightning_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_lightning_dragon
		}
	}
	#str_aurora_dragon
	triggered_cost_modifier = {
		key = ship_str_aurora_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_aurora_dragon
		}
	}
	triggered_upkeep_modifier = {
		key = ship_str_aurora_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_aurora_dragon
		}
	}
	#str_military_station_str_dragon_fortress
	triggered_cost_modifier = {
		key = ship_military_station_str_dragon_fortress
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_military_station_str_dragon_fortress
		}
	}
	triggered_upkeep_modifier = {
		key = ship_military_station_str_dragon_fortress
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = military_station_str_dragon_fortress
		}
	}
	#str_firmament_dragon
	triggered_cost_modifier = {
		key = ship_str_firmament_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_firmament_dragon
		}
	}
	triggered_upkeep_modifier = {
		key = ship_str_firmament_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_firmament_dragon
		}
	}
	#str_immensity_dragon
	triggered_cost_modifier = {
		key = ship_str_immensity_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_immensity_dragon
		}
	}
	triggered_upkeep_modifier = {
		key = ship_str_immensity_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_immensity_dragon
		}
	}
	#str_eternity_dragon
	triggered_cost_modifier = {
		key = ship_str_eternity_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_eternity_dragon
		}
	}
	triggered_upkeep_modifier = {
		key = ship_str_eternity_dragon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = str_eternity_dragon
		}
	}
	#science
	triggered_cost_modifier = {
		key = ship_science
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_science_ship
		}
	}
	triggered_upkeep_modifier = {
		key = ship_science
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_science_ship
		}
	}
	#constructor
	triggered_cost_modifier = {
		key = ship_constructor
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_constructor
		}
	}
	triggered_upkeep_modifier = {
		key = ship_constructor
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_constructor
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_outpost
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = starbase_outpost
		}
	}
	#NSC	
	triggered_cost_modifier = {
		key = ship_StrikeCruiser
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = StrikeCruiser
		}
	}
	triggered_cost_modifier = {
		key = ship_Battlecruiser
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = Battlecruiser
		}
	}
	triggered_cost_modifier = {
		key = ship_Carrier
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = Carrier
		}
	}
	triggered_cost_modifier = {
		key = ship_Dreadnought
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = Dreadnought
		}
	}
	triggered_cost_modifier = {
		key = ship_Flagship
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = Flagship
		}
	}
	triggered_cost_modifier = {
		key = ship_supportship
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = supportship
		}
	}
	triggered_cost_modifier = {
		key = ship_military_station_small
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = military_station_small
		}
	}
	triggered_cost_modifier = {
		key = ship_military_station_medium
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = military_station_medium
		}
	}
	triggered_cost_modifier = {
		key = ship_military_station_large
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = military_station_large
		}
	}
	triggered_cost_modifier = {
		key = ship_xl_cannon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = xl_cannon
		}
	}
	triggered_cost_modifier = {
		key = ship_ion_cannon
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = ion_cannon
		}
	}
	triggered_upkeep_modifier = {
		key = ship_military_station_small
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = military_station_small
		}
	}
	triggered_upkeep_modifier = {
		key = ship_military_station_medium
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = military_station_medium
		}
	}
	triggered_upkeep_modifier = {
		key = ship_military_station_large
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = military_station_large
		}
	}
	#RS	
	triggered_cost_modifier = {
		key = ship_rs_battlecruiser
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_battlecruiser
		}
	}
	triggered_cost_modifier = {
		key = ship_rs_ea_cruiser
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_ea_cruiser
		}
	}
	triggered_cost_modifier = {
		key = ship_rs_support_cruiser
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_support_cruiser
		}
	}
	triggered_cost_modifier = {
		key = ship_rs_dreadnought
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_dreadnought
		}
	}
	triggered_cost_modifier = {
		key = ship_rs_heavy_dreadnought_type_a
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_heavy_dreadnought_type_a
		}
	}
	triggered_cost_modifier = {
		key = ship_rs_heavy_dreadnought_type_b
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_heavy_dreadnought_type_b
		}
	}
	triggered_cost_modifier = {
		key = ship_rs_heavy_dreadnought_type_c
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_heavy_dreadnought_type_c
		}
	}
	triggered_cost_modifier = {
		key = ship_rs_heavy_dreadnought_type_d
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_heavy_dreadnought_type_d
		}
	}
	triggered_cost_modifier = {
		key = ship_rs_heavy_dreadnought_type_e
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_heavy_dreadnought_type_e
		}
	}
	triggered_cost_modifier = {
		key = ship_rs_heavy_dreadnought_type_f
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_heavy_dreadnought_type_f
		}
	}
	triggered_cost_modifier = {
		key = ship_rs_heavy_dreadnought_type_g
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_heavy_dreadnought_type_g
		}
	}
	triggered_cost_modifier = {
		key = ship_rs_heavy_dreadnought_type_h
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = rs_heavy_dreadnought_type_h
		}
	}
	#POTE
	triggered_cost_modifier = {
		key = ship_z_pote_military_station_medium
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = z_pote_military_station_medium
		}
	}
	triggered_cost_modifier = {
		key = ship_z_pote_military_station_large
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = z_pote_military_station_large
		}
	}
	triggered_cost_modifier = {
		key = ev_fleet_size_ships
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = ev_fleet_size_ship
		}
	}
}

ship_components = {
	parent = ships
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
}

#太虚家园舰
#ship_homeless_ev = {
#	#parent = country
#	generate_mult_modifiers = {
#		cost
#		produces
#		upkeep
#	}
#	generate_add_modifiers = {
#		cost
#		produces
#		upkeep
#	} 
#	
#	triggered_produces_modifier = {
#		key = ship_components_minerals_ev
#		use_parent_icon = yes
#		modifier_types = {
#			mult
#			add
#		}
#
#		trigger = {
#			always = yes
#		}
#	}	
#}
ship_components_minerals_ev = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_energy_ev = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_food_ev = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_alloys_ev = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_consumer_goods_ev = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_volatile_motes_ev = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_rare_crystals_ev = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_exotic_gases_ev = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_research_ev = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_modifier_PD = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_food_energy_ev = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_manpower_ev = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_pop_kill = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

ship_components_build_ship = {
	parent = country
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			OR = {
				is_ship_size = homeless_ship_starbase
				is_ship_size = homeless_ship
				is_ship_size = mini_homeless_ship
				is_ship_size = megastructures_homeless_ship
			}
		}
	}
	#
	triggered_produces_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	#
	triggered_upkeep_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
	triggered_cost_modifier = {
		key = ship_private_homeless_ev
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the d
			is_ship_size = private_homeless_ship
			is_ship_size = private_homeless_ship_starbase
		}
	}
}

#####太虚结束
ship_sections = {
	parent = ships
	generate_mult_modifiers = {
		cost
	}
}

ship_upgrades = {
	parent = ships
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		rlc_machine_part
		rlc_electronic_component
		rlc_fuel
	}
	generate_mult_modifiers = {
		cost
	}
}

stations = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		rlc_machine_part
		rlc_electronic_component
		rlc_fuel
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	parent = country
}

station_gatherers = {
	parent = stations
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

station_researchers = {
	parent = stations
	generate_mult_modifiers = {
		produces
		cost
	}
	generate_add_modifiers = {
		produces
		cost
	}
}

station_observers = {
	parent = stations
	generate_mult_modifiers = {
		produces
		cost
	}
	generate_add_modifiers = {
		produces
		cost
	}
}

station_observer_missions = {
	parent = station_observers
	generate_mult_modifiers = {
		produces
		cost
	}
	generate_add_modifiers = {
		produces
		cost
	}
}

starbases = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		upkeep
		cost
	}
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	parent = country
}

starbase_stations = {
	parent = starbases
	triggered_cost_modifier = {
		key = starbase_outpost
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = starbase_outpost
		}
	}
	triggered_upkeep_modifier = {
		key = starbase_outpost
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = starbase_outpost
		}
	}
}

starbase_buildings = {
	#	use_for_ai_budget = yes
	parent = starbases
	#	ai_use_parent_for_resources_upkeep = {
	#		energy
	#	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
}

starbase_modules = {
	#	use_for_ai_budget = yes
	parent = starbases
	#	ai_use_parent_for_resources_upkeep = {
	#		energy
	#	}
	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		cost
		upkeep
	}
}

planets = {
	parent = country
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
	#hidden = yes
}

planet_structures = {
	parent = planets
	hidden = yes
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
}

planet_buildings = {
	parent = planet_structures
	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		cost
		upkeep
	}
}

planet_buildings_strongholds = {
	parent = planet_buildings
	generate_mult_modifiers = {
		cost
	}
}

planet_branch_offices = {
	parent = planets
	generate_mult_modifiers = {
		cost
		#太虚
		produces
		#
	}
	generate_add_modifiers = {
		cost
		produces
	}
}

#太虚
planet_branch_office_buildings = {
	parent = planets
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

planet_districts = {
	parent = planet_structures
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
}

planet_districts_cities = {
	parent = planet_structures
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
}

planet_districts_hab_energy = {
	parent = planet_districts
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
}

planet_districts_hab_research = {
	parent = planet_districts
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
}

planet_districts_hab_mining = {
	parent = planet_districts
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
}

planet_districts_hab_trade = {
	parent = planet_districts
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
}

planet_districts_hab_leisure = {
	parent = planet_districts
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
}

planet_jobs = {
	parent = planets

	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}

	triggered_produces_modifier = {
		key = planet_jobs_slave
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = slave
			has_job_category = worker
		}
	}
	
	
	triggered_produces_modifier = {
		key = habitat_jobs
		modifier_types = {
			mult
			add
		}
		trigger = {
			exists = planet
			planet = { is_planet_class = pc_habitat }
		}
	}

	triggered_produces_modifier = {
		key = non_artificial_planet_jobs
		modifier_types = {
			mult
			add
		}
		trigger = {
			exists = planet
			planet = { is_artificial = no }
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_worker
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				is_pop_category = worker
				AND = {
					is_pop_category = slave # Yes, slave should count towards both worker and slave
					has_job_category = worker
				}
				is_pop_category = simple_drone
			}
		}
	}

	triggered_produces_modifier = { #use this one if deliberately excluding worker drones
		key = planet_jobs_worker_only
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				is_pop_category = worker
				AND = {
					is_pop_category = slave # Yes, slave should count towards both worker and slave
					has_job_category = worker
				}
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_specialist
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				is_pop_category = specialist
				is_pop_category = complex_drone #planet_jobs_complex_drone is preferable for stuff visible during galaxy setup
				AND = {
					is_pop_category = slave
					has_job_category = specialist
				}
			}
		}
	}

	triggered_produces_modifier = { #use this one if deliberately excluding complex drones
		key = planet_jobs_specialist_only
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				is_pop_category = specialist
				AND = {
					is_pop_category = slave
					has_job_category = specialist
				}
			}
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_ruler
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = ruler
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_simple_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = simple_drone
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_complex_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = complex_drone
		}
	}

	triggered_produces_modifier = {
		key = planet_jobs_robotic
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = yes
		}
	}

	#维护费

	triggered_upkeep_modifier = {
		key = planet_jobs_slave
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = slave
			has_job_category = worker
		}
	}
	
	
	triggered_upkeep_modifier = {
		key = habitat_jobs
		modifier_types = {
			mult
			add
		}
		trigger = {
			exists = planet
			planet = { is_planet_class = pc_habitat }
		}
	}

	triggered_upkeep_modifier = {
		key = non_artificial_planet_jobs
		modifier_types = {
			mult
			add
		}
		trigger = {
			exists = planet
			planet = { is_artificial = no }
		}
	}

	triggered_upkeep_modifier = {
		key = planet_jobs_worker
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				is_pop_category = worker
				AND = {
					is_pop_category = slave # Yes, slave should count towards both worker and slave
					has_job_category = worker
				}
				is_pop_category = simple_drone
			}
		}
	}

	triggered_upkeep_modifier = {
		key = planet_jobs_specialist
		modifier_types = {
			mult
			add
		}
		trigger = {
			OR = {
				is_pop_category = specialist
				is_pop_category = complex_drone #planet_jobs_complex_drone is preferable for stuff visible during galaxy setup
				AND = {
					is_pop_category = slave
					has_job_category = specialist
				}
			}
		}
	}

	triggered_upkeep_modifier = {
		key = planet_jobs_ruler
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = ruler
		}
	}

	triggered_upkeep_modifier = {
		key = planet_jobs_simple_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = simple_drone
		}
	}

	triggered_upkeep_modifier = {
		key = planet_jobs_complex_drone
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_pop_category = complex_drone
		}
	}

	triggered_upkeep_modifier = {
		key = planet_jobs_robotic
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = yes
		}
	}
}


planet_jobs_productive = { #this should contain all categories that primarily produce resources (rather than e.g. amenities, trade, stability)
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}
planet_bio_trophies = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_pop_assemblers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_farmers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_miners = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_sr_miners = { #added because we don't want miners_minerals_produces_add to apply to these
	parent = planet_miners
	generate_add_modifiers = {
		upkeep
	}
}

planet_livestock = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_technician = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_executives = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_managers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_administrators = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_bureaucrats = {
	icon = "job_bureaucrat"
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_executives = {
	parent = planet_politicians
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_researchers = {
	icon = "job_researcher"
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_metallurgists = {
	icon = "job_foundry"
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_culture_workers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_evaluators = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_synapse_drones = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_nobles = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_merchants = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_entertainers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_soldiers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_necromancers = {
	parent = planet_researchers
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
}

planet_priests = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_enforcers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_telepaths = {
	parent = planet_enforcers
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_doctors = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_refiners = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_translucers = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_chemists = {
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_artisans = {
	icon = "job_artisan"
	parent = planet_jobs
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_necro_apprentices = {
	parent = planet_pop_assemblers
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

planet_necromancers = {
	parent = planet_researchers
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

#planet_bureaucrats = {
#	icon = "job_bureaucrat"
#	parent = planet_jobs
#	generate_add_modifiers = {
#		produces
#    upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#	
#}
#Duelists are entertainers in disguise#
#
#planet_duelists = {
#	icon = "job_duelist"
#	parent = planet_entertainers
#	generate_add_modifiers = {
#		produces
#       upkeep
#	}
#	generate_mult_modifiers = {
#		produces
#		upkeep
#	}
#}

planet_pops = {
	parent = planets
	#太虚
	generate_mult_modifiers = {
		upkeep
		produces
	}
	generate_add_modifiers = {
		upkeep
		produces
	}
	triggered_upkeep_modifier = {
		key = planet_pops_lithoid
		modifier_types = {
			mult
		}
		trigger = {
			is_species_class = LITHOID
		}
	}
	triggered_upkeep_modifier = {
		key = planet_pops_robotics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = yes
		}
	}
	triggered_upkeep_modifier = {
		key = planet_pops_organics
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_robot_pop = no
		}
	}
	triggered_upkeep_modifier = {
		key = planet_pops_unemployed
		modifier_types = {
			add
			mult
		}
		trigger = {
			is_unemployed = yes
		}
	}
}

unemployment_resources = {
	parent = planet_pops
	generate_add_modifiers = {
		#太虚
		produces
		upkeep
	}
}

#太虚
pop_category_precursor = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

pop_category_xeno_ward = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

pop_category_pre_sapients = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

pop_category_purge = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

pop_category_bio_trophy = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

pop_category_slave = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

pop_category_robot = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

pop_category_drones = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

pop_category_workers = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

pop_category_specialists = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

pop_category_rulers = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

pop_category_assimilation = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

#--太虚结束--
planet_deposits = {
	parent = planets
}

orbital_mining_deposits = {
	parent = station_gatherers
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

orbital_research_deposits = {
	parent = station_researchers
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

deposit_blockers = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		cost
	}
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	parent = country
}

armies = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		#太虚
		produces
		cost
		upkeep
	}
	#太虚
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	parent = country
}

leaders = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	parent = country
}

leader_admirals = {
	parent = leaders
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

leader_generals = {
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

leader_scientists = {
	parent = leaders
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

leader_governors = {
	parent = leaders
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

leader_generals = {
	parent = leaders
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}
diplomacy = {
	hidden = yes
	parent = country
	generate_mult_modifiers = {
		upkeep
	}
	generate_add_modifiers = {
		produces
	}
}

pop_factions = {
	parent = country
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
}

subjects = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
}

federation = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
}

rivalries = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
}

non_aggression_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
}

migration_pacts = {
	parent = diplomacy
}

research_agreements = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
	}
}

commercial_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
	}
}

defensive_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
}

guarantees = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
}

monthly_trades = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

claims = {
	use_for_ai_budget = yes
	parent = country
}

subject_tax = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

envoy_costs = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

diplo_closed_borders = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

subject_integration = {
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

relics = {
	#太虚
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
}

artifact_actions = {

}

sector = {
}


menace = {
}

operations = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
	parent = country
}

############

ev_statistics = {
	#太虚的统计
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
}


terraforming = {
	parent = country
	use_for_ai_budget = yes

	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

terraforming_ocean = {
	parent = terraforming

	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}


# Country wide modifier collection
country_container = {
	hidden = yes
	parent = country
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_suppression = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_promotion = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_monuments = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_ambition = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_federation_perks = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_civics = {
	parent = country_container
	generate_add_modifiers = {
		upkeep
		produces
	}
}

country_ai_uprising = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_covenant = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
}

country_dessanu = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_extended_payout = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
}

country_shoulders = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_galactic_standard = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
}

country_concessions = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_first_contact = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_custodian = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_tech = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_traditions = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_ruler = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

country_ethic = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

planet_arcane_conversions = {
	icon = "datealive_crystals_arcane_conversion"
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}
