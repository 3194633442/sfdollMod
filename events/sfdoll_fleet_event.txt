namespace = sfdoll_fleet_event

#on_entering_battle,是否为铁血的舰队，This = owner of fleet 1,FromFrom = fleet 1,FromFromFrom = fleet 2
country_event = {
	id = sfdoll_fleet_event.1
	is_triggered_only = yes
	hide_window = yes
	title= fleet_sfdoll_event.1
	trigger = {	has_authority = auth_gf_sfdoll	 }
	immediate = {
		fromfrom = {
			fleet_event = {
				id = sfdoll_fleet_event.2
			}
			if = {
				limit = {
					any_owned_ship = {
						has_component = component_aura_sfdoll_1
					}
				}
				root.fromfromfrom = {
					fleet_event = {
						id = sfdoll_fleet_event.6
					}
				}
			}
		}
	}
}

#舰队伪无敌
fleet_event = {
	id = sfdoll_fleet_event.2
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_in_combat = yes
		NOT = {
			has_fleet_flag = sfdoll_fleet_revive_lock
		}
	}
	immediate = {
		set_timed_fleet_flag = {
			flag = sfdoll_fleet_revive_lock
			days = 28
		}
		every_owned_ship = {
			if = {
				limit = { has_component = sfdoll_aux_ship_revive	}
				set_ship_flag = ship_sfdoll_can_revive
				set_disable_at_health = 0
				ship_event = {
					id = sfdoll_fleet_event.3
					days = 10
				}
			}
			else_if = {
				limit = { has_ship_flag = ship_sfdoll_can_revive }
				set_disable_at_health = -1
				remove_ship_flag = ship_sfdoll_can_revive
			}
		}

		#循环执行
		fleet_event = {
			id = sfdoll_fleet_event.2
			days = 30
		}
	}
}

#清除锁血效果
ship_event = {
	id = sfdoll_fleet_event.3
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { has_ship_flag = ship_sfdoll_can_revive }
			set_disable_at_health = -1
			remove_ship_flag = ship_sfdoll_can_revive
		}	
	}
}

#舰船回血和解锁
ship_event = {
	id = sfdoll_fleet_event.4
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_ship_flag = ship_sfdoll_can_revive
	}
	immediate = {
		repair_ship = yes
		set_disabled = no
	}
}

#舰船破坏的统一检测,this = owner of destroyed ship,fromfrom = destroyed ship
country_event = {
	id = sfdoll_fleet_event.5
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_authority = auth_gf_sfdoll
	}
	immediate = {
		fromfrom = {
			#诺耶露受损
			if = {
				limit = {	is_ship_size = ship_sfdoll_noel	}
				root = {
					set_timed_country_flag = {
						flag = sfdoll_noel_is_destroyed
						days = 360
					}
				}
			}
			
			if = {
				limit = {
					has_component = sfdoll_aux_ship_revive_2
					NOT = {
						has_ship_flag = flag_sfdoll_aux_ship_revive_2
					}
				}
				if = {
					limit = { is_ship_size = sfdoll_warship_1 }
					fleet = {
						create_ship = {
							name = prev
							random_existing_design = sfdoll_warship_1
							effect = {
								set_timed_ship_flag = {
									flag = flag_sfdoll_aux_ship_revive_2
									days = 30
								}
							}
						}
					}
				}
				else_if = {
					limit = { is_ship_size = sfdoll_warship_2 }
					fleet = {
						create_ship = {
							name = prev
							random_existing_design = sfdoll_warship_2
							effect = {
								set_timed_ship_flag = {
									flag = flag_sfdoll_aux_ship_revive_2
									days = 30
								}
							}
						}
					}
				}
				else_if = {
					limit = { is_ship_size = sfdoll_warship_3 }
					fleet = {
						create_ship = {
							name = prev
							random_existing_design = sfdoll_warship_3
							effect = {
								set_timed_ship_flag = {
									flag = flag_sfdoll_aux_ship_revive_2
									days = 30
								}
							}
						}
					}
				}
				else_if = {
					limit = { is_ship_size = sfdoll_warship_4 }
					fleet = {
						create_ship = {
							name = prev
							random_existing_design = sfdoll_warship_4
							effect = {
								set_timed_ship_flag = {
									flag = flag_sfdoll_aux_ship_revive_2
									days = 30
								}
							}
						}
					}
				}
				else_if = {
					limit = { is_ship_size = ship_sfdoll_carrier }
					create_fleet = {
						name = root.fromfrom.fleet
						effect = {
							set_owner = root
							create_ship = {
								random_existing_design = ship_sfdoll_carrier
								name = root.fromfrom
								effect = {
									set_timed_ship_flag = {
										flag = flag_sfdoll_aux_ship_revive_2
										days = 30
									}
								}
							}
							set_location = root.fromfrom
						}
						settings = {
							can_upgrade = yes
							uses_naval_capacity = yes
							spawn_debris = no
							can_disband = yes
							can_change_leader = yes
							can_change_composition = no
						}
					}
				}

			}
		}
	}
}

#开战30天火力压制
fleet_event = {
	id = sfdoll_fleet_event.6
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = {
			has_fleet_flag = flag_aura_sfdoll_1
		}
	}
	immediate = {
		add_modifier = {
			modifier = aura_sfdoll_1_modifier
			days = 30
		}
		set_timed_fleet_flag = {
			flag = flag_aura_sfdoll_1
			days = 30
		}
	}
}

#舰队破坏的统一检测
# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = sfdoll_fleet_event.7
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_authority = auth_gf_sfdoll
	}
	immediate = {
		fromfrom = {
			# if = {
			# 	limit = {
			# 		any_owned_ship = {
			# 			has_component = sfdoll_aux_ship_revive_2
			# 			NOT = {
			# 				has_ship_flag = flag_sfdoll_aux_ship_revive_2
			# 			}
			# 		}
			# 	}
			# 	save_event_target_as = sfdoll_fleet_rivive_old
			# 	solar_system = {
			# 		create_fleet = {
			# 			name = root.fromfrom
			# 			effect = {
			# 				set_owner = root
			# 				set_location = root.fromfrom
			# 				save_event_target_as = sfdoll
			# 				event_target:sfdoll_fleet_rivive = {
			# 					every_owned_ship = {
			# 						limit = {
			# 							has_component = sfdoll_aux_ship_revive_2
			# 							NOT = {
			# 								has_ship_flag = flag_sfdoll_aux_ship_revive_2
			# 							}
			# 						}

			# 					}
			# 				}
			# 			}
			# 			settings = {
			# 				can_upgrade = yes
			# 				uses_naval_capacity = yes
			# 				spawn_debris = yes
			# 				can_disband = yes
			# 				can_change_leader = yes
			# 				can_change_composition = yes
			# 			}
			# 		}
			# 	}
			# }
		}
	}
}
