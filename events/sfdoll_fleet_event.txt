namespace = sfdoll_fleet_event

#通用判断，是否为铁血的舰队
country_event = {
	id = sfdoll_fleet_event.1
	is_triggered_only = yes
	hide_window = yes
	title= fleet_sfdoll_event.1
	trigger = {	has_authority = auth_gf_sfdoll	 }
	immediate = {
		fromfrom = {
			fleet_event = {
				id = sfdoll_fleet_event.2
			}
		}
	}
}

#舰队伪无敌
fleet_event = {
	id = sfdoll_fleet_event.2
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_in_combat = yes
		NOT = {
			has_fleet_flag = sfdoll_fleet_revive_lock
		}
	}
	immediate = {
		set_timed_fleet_flag = {
			flag = sfdoll_fleet_revive_lock
			days = 28
		}
		every_owned_ship = {
			if = {
				limit = { has_component = sfdoll_aux_ship_revive	}
				set_ship_flag = ship_sfdoll_can_revive
				set_disable_at_health = 0
				ship_event = {
					id = sfdoll_fleet_event.3
					days = 10
				}
			}
			else = {
				if = {
					limit = { has_ship_flag = ship_sfdoll_can_revive }
					set_disable_at_health = -1
					remove_ship_flag = ship_sfdoll_can_revive
				}
			}
		}

		#循环执行
		fleet_event = {
			id = sfdoll_fleet_event.2
			days = 30
		}
	}
}

#清除锁血效果
ship_event = {
	id = sfdoll_fleet_event.3
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { has_ship_flag = ship_sfdoll_can_revive }
			set_disable_at_health = -1
			remove_ship_flag = ship_sfdoll_can_revive
		}	
	}
}

#舰船回血和解锁
ship_event = {
	id = sfdoll_fleet_event.4
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_ship_flag = ship_sfdoll_can_revive
	}
	immediate = {
		repair_ship = yes
		set_disabled = no
	}
}

#舰船破坏的统一检测,this = owner of destroyed ship,fromfrom = destroyed ship
country_event = {
	id = sfdoll_fleet_event.5
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_authority = auth_gf_sfdoll
	}
	immediate = {
		fromfrom = {
			#诺耶露受损
			if = {
				limit = {	is_ship_size = ship_sfdoll_noel	}
				root = {
					set_timed_country_flag = {
						flag = sfdoll_noel_is_destroyed
						days = 360
					}
				}
			}
			# if = {
			# 	limit = { is_ship_size = corvette  }
			# 	fleet = {
			# 		create_ship = {
			# 			name = prev
			# 			random_existing_design = corvette
			# 		}
			# 	}
			# }
			# else_if = {
			# 	limit = { is_ship_size = destroyer }
			# 	fleet = {
			# 		create_ship = {
			# 			name = prev
			# 			random_existing_design = destroyer
			# 		}
			# 	}
			# }
			# else_if = {
			# 	limit = { is_ship_size = cruiser }
			# 	fleet = {
			# 		create_ship = {
			# 			name = prev
			# 			random_existing_design = cruiser
			# 		}
			# 	}
			# }
			# else_if = {
			# 	limit = { is_ship_size = battleship }
			# 	fleet = {
			# 		create_ship = {
			# 			name = prev
			# 			random_existing_design = battleship
			# 		}
			# 	}
			# }
			# else_if = {
			# 	limit = { is_ship_size = titan }
			# 	fleet = {
			# 		create_ship = {
			# 			name = prev
			# 			random_existing_design = titan
			# 		}
			# 	}
			# }
			# else_if = {
			# 	limit = { is_ship_size = ship_air_defense_sfdoll }
			# 	fleet = {
			# 		create_ship = {
			# 			name = prev
			# 			random_existing_design = ship_air_defense_sfdoll
			# 		}
			# 	}
			# }
			# else_if = {
			# 	limit = { is_ship_size = sfdoll_destroyer }
			# 	fleet = {
			# 		create_ship = {
			# 			name = prev
			# 			random_existing_design = sfdoll_destroyer
			# 		}
			# 	}
			# }
			# else_if = {
			# 	limit = { is_ship_size = ship_support_sfdoll }
			# 	fleet = {
			# 		create_ship = {
			# 			name = prev
			# 			random_existing_design = ship_support_sfdoll
			# 		}
			# 	}
			# }
			# else_if = {
			# 	limit = { is_ship_size = ship_attacker_sfdoll }
			# 	fleet = {
			# 		create_ship = {
			# 			name = prev
			# 			random_existing_design = ship_attacker_sfdoll
			# 		}
			# 	}
			# }
			# else_if = {
			# 	limit = { is_ship_size = ship_sfdoll_carrier }
			# 	fleet = {
			# 		create_ship = {
			# 			name = prev
			# 			random_existing_design = ship_sfdoll_carrier
			# 		}
			# 	}
			# }
		}
	}
}

